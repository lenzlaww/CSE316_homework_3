{"ast":null,"code":"var _jsxFileName = \"/Users/yuwenqianchen/Documents/SBU/CSE316_MK/Playlister_HW3/client/src/components/EditToolbar.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport { useHistory } from 'react-router-dom';\n/*\n    This toolbar is a functional React component that\n    manages the undo/redo/close buttons.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditToolbar() {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const history = useHistory();\n  let enabledButtonClass = \"playlister-button\";\n\n  function handleUndo() {\n    store.undo();\n  }\n\n  function handleRedo() {\n    store.redo();\n  }\n\n  function handleClose() {\n    //history.push(\"/\");\n    store.closeCurrentList();\n  }\n\n  function handleAddSong() {\n    store.addAdditionSongTransaction();\n  }\n\n  let editStatus = false;\n  let editStatusRedo = false;\n  let editStatusUndo = false;\n  let hasRedo;\n\n  if (store.isListNameEditActive) {\n    editStatus = true;\n    editStatusRedo = true;\n    editStatusUndo = true;\n  }\n\n  if (!store.currentList) {\n    editStatus = true;\n    editStatusRedo = true;\n    editStatusUndo = true;\n  }\n\n  if (store.currentList) {\n    editStatus = false;\n    editStatusRedo = false;\n    editStatusUndo = false;\n\n    if (tps.hasTransactionToRedo) {\n      editStatusRedo = false;\n    } else if (!tps.hasTransactionToRedo) {\n      editStatusRedo = true;\n    }\n\n    if (tps.hasTransactionToUndo) {\n      editStatusUndo = false;\n    } else if (!tps.hasTransactionToUndo) {\n      editStatusUndo = true;\n    }\n  }\n\n  if (store.showModal) {\n    editStatus = true;\n    editStatusRedo = true;\n    editStatusUndo = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    id: \"edit-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"add-song-button\",\n      disabled: editStatus,\n      value: \"+\",\n      onClick: handleAddSong,\n      className: enabledButtonClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"undo-button\",\n      disabled: editStatusUndo,\n      value: \"\\u27F2\",\n      className: enabledButtonClass,\n      onClick: handleUndo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"redo-button\",\n      disabled: editStatusRedo,\n      value: \"\\u27F3\",\n      className: enabledButtonClass,\n      onClick: handleRedo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"close-button\",\n      disabled: editStatus,\n      value: \"\\u2715\",\n      className: enabledButtonClass,\n      onClick: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditToolbar, \"3pru+SYrs14w+1LSVfrX0yDmdFE=\", false, function () {\n  return [useHistory];\n});\n\n_c = EditToolbar;\nexport default EditToolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditToolbar\");","map":{"version":3,"sources":["/Users/yuwenqianchen/Documents/SBU/CSE316_MK/Playlister_HW3/client/src/components/EditToolbar.js"],"names":["useContext","GlobalStoreContext","useHistory","EditToolbar","store","history","enabledButtonClass","handleUndo","undo","handleRedo","redo","handleClose","closeCurrentList","handleAddSong","addAdditionSongTransaction","editStatus","editStatusRedo","editStatusUndo","hasRedo","isListNameEditActive","currentList","tps","hasTransactionToRedo","hasTransactionToUndo","showModal"],"mappings":"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","sourcesContent":["import { useContext } from 'react'\nimport { GlobalStoreContext } from '../store'\nimport { useHistory } from 'react-router-dom'\n\n/*\n    This toolbar is a functional React component that\n    manages the undo/redo/close buttons.\n    \n    @author McKilla Gorilla\n*/\nfunction EditToolbar() {\n    const { store } = useContext(GlobalStoreContext);\n    const history = useHistory();\n\n    let enabledButtonClass = \"playlister-button\";\n\n    \n\n    function handleUndo() {\n        store.undo();\n    }\n    function handleRedo() {\n        store.redo();\n    }\n    function handleClose() {\n        //history.push(\"/\");\n        store.closeCurrentList();\n    }\n    function handleAddSong(){\n        store.addAdditionSongTransaction();\n    }\n    let editStatus = false;\n    let editStatusRedo = false;\n    let editStatusUndo = false;\n    let hasRedo\n    if (store.isListNameEditActive) {\n        editStatus = true;\n        editStatusRedo = true;\n        editStatusUndo = true;\n    }\n    if(!store.currentList){\n        editStatus = true;\n        editStatusRedo = true;\n        editStatusUndo = true;\n    }\n    if(store.currentList){\n        editStatus = false;\n        editStatusRedo = false;\n        editStatusUndo = false;\n        if(tps.hasTransactionToRedo){\n            editStatusRedo = false;\n        }else if(!tps.hasTransactionToRedo){\n            editStatusRedo = true;\n        }\n        if(tps.hasTransactionToUndo){\n            editStatusUndo = false;\n        }else if(!tps.hasTransactionToUndo){\n            editStatusUndo = true;\n        }\n    }\n    if (store.showModal){\n        editStatus = true;\n        editStatusRedo = true;\n        editStatusUndo = true;\n    }\n    \n    return (\n        <span id=\"edit-toolbar\">\n            <input\n                type=\"button\"\n                id='add-song-button'\n                disabled={editStatus}\n                value=\"+\"\n                onClick={handleAddSong}\n                className={enabledButtonClass}\n            />\n            <input\n                type=\"button\"\n                id='undo-button'\n                disabled={editStatusUndo}\n                value=\"⟲\"\n                className={enabledButtonClass}\n                onClick={handleUndo}\n            />\n            <input\n                type=\"button\"\n                id='redo-button'\n                disabled={editStatusRedo}\n                value=\"⟳\"\n                className={enabledButtonClass}\n                onClick={handleRedo}\n            />\n            <input\n                type=\"button\"\n                id='close-button'\n                disabled={editStatus}\n                value=\"&#x2715;\"\n                className={enabledButtonClass}\n                onClick={handleClose}\n            />\n        </span>);\n}\n\nexport default EditToolbar;"]},"metadata":{},"sourceType":"module"}