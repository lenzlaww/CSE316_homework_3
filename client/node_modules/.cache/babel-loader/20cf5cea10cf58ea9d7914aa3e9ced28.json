{"ast":null,"code":"/*\n    This is our http api, which we use to send requests to\n    our back-end API. Note we're using the Axios library\n    for doing this, which is an easy to use AJAX-based\n    library. We could (and maybe should) use Fetch, which\n    is a native (to browsers) standard, but Axios is easier\n    to use when sending JSON back and forth and it's a Promise-\n    based API which helps a lot with asynchronous communication.\n    \n    @author McKilla Gorilla\n*/\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:4000/api'\n}); // THESE ARE ALL THE REQUESTS WE'LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /playlist). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE CALL THE payload, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\n\nexport const getAllPlaylists = () => api.get(`/playlists`);\nexport const getPlaylistPairs = () => api.get('playlistpairs');\nexport const getPlaylistById = id => api.get(`/playlist/${id}`);\nexport const createNewList = newList => api.post(`/playlist`, newList);\nexport const updatePlaylistById = (id, name) => api.put(`/playlist/${id}`, name);\nexport const deleteListById = id => api.delete('/playlist/${id}');\nconst apis = {\n  getAllPlaylists,\n  getPlaylistPairs,\n  getPlaylistById,\n  createNewList,\n  updatePlaylistById,\n  deleteListById\n};\nexport default apis;","map":{"version":3,"sources":["/Users/yuwenqianchen/Documents/SBU/CSE316_MK/Playlister_HW3/client/src/api/index.js"],"names":["axios","api","create","baseURL","getAllPlaylists","get","getPlaylistPairs","getPlaylistById","id","createNewList","newList","post","updatePlaylistById","name","put","deleteListById","delete","apis"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAE;AADY,CAAb,CAAZ,C,CAIA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAG,MAAMH,GAAG,CAACI,GAAJ,CAAS,YAAT,CAA9B;AACP,OAAO,MAAMC,gBAAgB,GAAG,MAAML,GAAG,CAACI,GAAJ,CAAQ,eAAR,CAA/B;AACP,OAAO,MAAME,eAAe,GAAIC,EAAD,IAAQP,GAAG,CAACI,GAAJ,CAAS,aAAYG,EAAG,EAAxB,CAAhC;AACP,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAaT,GAAG,CAACU,IAAJ,CAAU,WAAV,EAAsBD,OAAtB,CAAnC;AACP,OAAO,MAAME,kBAAkB,GAAG,CAACJ,EAAD,EAAKK,IAAL,KAAcZ,GAAG,CAACa,GAAJ,CAAS,aAAYN,EAAG,EAAxB,EAA2BK,IAA3B,CAAzC;AACP,OAAO,MAAME,cAAc,GAAIP,EAAD,IAAQP,GAAG,CAACe,MAAJ,CAAW,iBAAX,CAA/B;AAGP,MAAMC,IAAI,GAAG;AACTb,EAAAA,eADS;AAETE,EAAAA,gBAFS;AAGTC,EAAAA,eAHS;AAITE,EAAAA,aAJS;AAKTG,EAAAA,kBALS;AAMTG,EAAAA;AANS,CAAb;AASA,eAAeE,IAAf","sourcesContent":["/*\n    This is our http api, which we use to send requests to\n    our back-end API. Note we're using the Axios library\n    for doing this, which is an easy to use AJAX-based\n    library. We could (and maybe should) use Fetch, which\n    is a native (to browsers) standard, but Axios is easier\n    to use when sending JSON back and forth and it's a Promise-\n    based API which helps a lot with asynchronous communication.\n    \n    @author McKilla Gorilla\n*/\n\nimport axios from 'axios'\nconst api = axios.create({\n    baseURL: 'http://localhost:4000/api',\n})\n\n// THESE ARE ALL THE REQUESTS WE'LL BE MAKING, ALL REQUESTS HAVE A\n// REQUEST METHOD (like get) AND PATH (like /playlist). SOME ALSO\n// REQUIRE AN id SO THAT THE SERVER KNOWS ON WHICH LIST TO DO ITS\n// WORK, AND SOME REQUIRE DATA, WHICH WE CALL THE payload, FOR WHEN\n// WE NEED TO PUT THINGS INTO THE DATABASE OR IF WE HAVE SOME\n// CUSTOM FILTERS FOR QUERIES\nexport const getAllPlaylists = () => api.get(`/playlists`)\nexport const getPlaylistPairs = () => api.get('playlistpairs')\nexport const getPlaylistById = (id) => api.get(`/playlist/${id}`)\nexport const createNewList = (newList) => api.post(`/playlist`, newList)\nexport const updatePlaylistById = (id, name) => api.put(`/playlist/${id}`, name)\nexport const deleteListById = (id) => api.delete('/playlist/${id}')\n\n\nconst apis = {\n    getAllPlaylists,\n    getPlaylistPairs,\n    getPlaylistById,\n    createNewList,\n    updatePlaylistById,\n    deleteListById\n}\n\nexport default apis\n"]},"metadata":{},"sourceType":"module"}